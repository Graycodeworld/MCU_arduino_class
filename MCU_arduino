#include <Servo.h>
#include <LiquidCrystal_PCF8574.h>
#include <Wire.h>
LiquidCrystal_PCF8574 lcd(0x27);

int n = 0;
const int ButtonPin = 2;      // 按鈕模組連接到數位腳位2
const int ButtonPin2 = 12;      // 按鈕模組連接到數位腳位12
const int ServoPin = 9;      // SG90伺服馬達訊號線連接到數位腳位9
int vibr_pin=4;              // 震動模組訊號線連接到數位腳位4
int isObstaclePin = 7;  // This is our input pin
int isObstacle = HIGH;  // HIGH MEANS NO OBSTACLE


Servo myservo;                // 建立Servo物件
int buttonState = HIGH;       // 追蹤按鈕的狀態
int buttonState2 = HIGH;       // 追蹤按鈕的狀態
// int lastButtonState = HIGH;   // 追蹤上一次的按鈕狀態
// int lastButtonState2 = HIGH;   // 追蹤上一次的按鈕狀態
int buttonPressCount = 0;     // 記錄按下的次數
unsigned long buttonPressStartTime = 0;  // 按鈕按下的起始時間
bool gameStarted = false;  // 游戲是否已開始



void setup() {
  pinMode(ButtonPin, INPUT_PULLUP);  // 設定按鈕腳位為輸入模式，並啟用內部上拉電阻
  pinMode(ButtonPin2, INPUT_PULLUP);  // 設定按鈕腳位為輸入模式，並啟用內部上拉電阻
  myservo.attach(ServoPin);          // SG90伺服馬達的訊號線
  lcd.begin(16, 2);
  pinMode(vibr_pin,INPUT);
  pinMode(isObstaclePin, INPUT);
  Serial.begin(9600);
  
}

void loop() {
      buttonState = digitalRead(ButtonPin);  // 讀取按鈕狀態
      Serial.println(buttonState);
      buttonState2 = digitalRead(ButtonPin2);  // 讀取按鈕2狀態
      Serial.println(buttonState2);
      // Serial.println("\n");



      // 檢查按鈕是否被按下
      if (buttonState == LOW) {
        myservo.write(0); 
        delay(100);
        myservo.write(90); 
        delay(100);
        myservo.write(180); 
        delay(110);
        myservo.write(90); 
        delay(100);
      }


      if(n >= 200){

        if(buttonState2 == HIGH){
          n=0;
          buttonState2 = digitalRead(ButtonPin2);  // 讀取按鈕2狀態
          gameStarted=false;
        }else{        
          lcd.setBacklight(240);
          lcd.home();
          lcd.clear();
          lcd.setCursor(0, 0);      
          lcd.print("YOU WIN!!"); // 打印数字
          delay(1000); // 等待一秒
        }        
      }else{
        if(gameStarted==true){
            //LCD
            int val;
            val=digitalRead(vibr_pin);
            isObstacle = digitalRead(isObstaclePin);

            //tremor
            if(val==1)
            {
              lcd.setBacklight(240);
              lcd.home();
              lcd.clear();
              lcd.setCursor(0, 0);      
              n+=10;
              lcd.print(n); // 打印数字
              delay(500); // 等待一秒
            }

            //IR
            if(isObstacle == LOW)
            {
              lcd.setBacklight(240);
              lcd.home();
              lcd.clear();
              lcd.setCursor(0, 0);     
              n+=25;                       
              lcd.print(n); // 打印数字
              delay(250); // 等待一秒

            }   
        }else{
          if(buttonState2 == HIGH){
            gameStarted = true;
            lcd.setBacklight(240);
            lcd.home();
            lcd.clear();
            lcd.setCursor(0, 0);  
            lcd.print("GAME START"); // 打印数字
            delay(1000);
            lcd.clear();
            lcd.print(n);
          }else{        
            lcd.setBacklight(240);
            lcd.home();
            lcd.clear();
            lcd.setCursor(0, 0);  
            lcd.print("PLESS TO START"); // 打印数字
            delay(100);
          }
        }
      }      
    }


